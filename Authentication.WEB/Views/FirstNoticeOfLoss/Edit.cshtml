@model InsuredTraveling.ViewModels.FirstNoticeOfLossEditViewModel
@using System.Web.Optimization;
@{
    ViewBag.Title = "First Notice of Loss";
    var noValue = "/";
}
@if (ViewBag.Message != null)
{
    <div class="row">
        <div class="col-md-5 col-sm-5" style="padding-top:5px">
            <div class="alert alert-dismissible alert-danger">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                <span>@ViewBag.Message</span>
            </div>
        </div>
    </div>
}
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<form style="margin-top:40px;" method="post" enctype="multipart/form-data" action="@Url.Action("Edit")">
    <div class="form-horizontal">
        <h3>@InsuredTraveling.Resource.FNOL_FNOLNumber @Model.FNOLNumber</h3>
        @Html.TextBoxFor(model => model.AdditionalInfoId, new { @class = "form-control input-sm", @style = "display: none;" })
        @Html.TextBoxFor(model => model.Id, new { @class = "form-control input-sm", @style = "display: none;" })
      
        <hr />
        <div class="row container">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-lg-7">
                        <label>@InsuredTraveling.Resource.FNOL_PolicyNumber: </label>
                        <label>
                            @Html.TextBoxFor(model => model.PolicyNumber, new { @class = "form-control input-sm", @style = "display: none;", @readonly = true })
                            @Model.PolicyNumber
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row container">
            <header class="well">@InsuredTraveling.Resource.FNOL_PolicyHolderInfo</header>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-lg-8">
                        <label>@InsuredTraveling.Resource.FNOL_Name:</label>
                        @Html.TextBoxFor(model => model.PolicyHolderName, new { @class = "form-control input-sm", @style = "display: none;", @readonly = true })
                        @Model.PolicyHolderName
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-8">
                        <label>@InsuredTraveling.Resource.FNOL_Address:</label>
                        @Html.TextBoxFor(model => model.PolicyHolderAdress, new { @class = "form-control input-sm", @style = "display: none;", @readonly = true })
                        @Model.PolicyHolderAdress
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-8">
                        <label>@InsuredTraveling.Resource.FNOL_Phone:</label>
                        @Html.TextBoxFor(model => model.PolicyHolderPhoneNumber, new { @class = "form-control input-sm", @style = "display: none;", @readonly = true })
                        @Model.PolicyHolderPhoneNumber

                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-8">
                        <label>@InsuredTraveling.Resource.FNOL_SSN:</label>
                        @Html.TextBoxFor(model => model.PolicyHolderSsn, new { @class = "form-control input-sm", @style = "display: none;", @readonly = true })
                        @Model.PolicyHolderSsn
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CheckBoxFor(model => model.PolicyHolderExistentBankAccount, new { @class = "col-md-1", @id = "ExistentBankAccount", @readonly = true, @style = "margin-top:3%;" })
                    <div class="col-lg-8 col-md-8">
                        <label class="control-label">@InsuredTraveling.Resource.FNOL_UsePreviousBankAccount</label>
                    </div>
                </div>
                <div class="form-group">
                    @Html.CheckBoxFor(model => model.PolicyHolderBankAccount, new { @class = "col-md-1", @id = "ForeignBankAccount", @readonly = true, @style = "margin-top:3%;" })
                    <div class="col-lg-4 col-md-4">
                        <label class="control-label">@InsuredTraveling.Resource.FNOL_ForeignBankAccount</label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.TextBoxFor(model => model.PolicyHolderBankAccountId, new { @class = "form-control input-sm", @id = "hiddenDropDownBankAccountPolicyHolder", @style = "display: none;" })
                        <select class="form-control" data-val="true" id="DropDownBankAccountPolicyHolder" name="PolicyHolderBankAccountId">
                            <option value="0">@InsuredTraveling.Resource.FNOL_ChooseBankAccount</option>
                            @foreach (var item in Model.PolicyHolderBankAccounts)
                            {
                                <option value="@item.ID" bank="@item.bank.Name">
                                    @item.Account_Number
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-6">
                        <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;" id="taccountspan"></span> @InsuredTraveling.Resource.FNOL_BankAccount:</label>
                        @Html.EditorFor(model => model.PolicyHolderBankAccountNumber, new { htmlAttributes = new { @class = "form-control input-sm", @maxLength = "15", @id = "TransactionAccount" } })

                        @Html.ValidationMessageFor(model => model.PolicyHolderBankAccountNumber, "", new { @class = "text-danger input-sm" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-6">
                        <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;" id="deponentspan"></span> @InsuredTraveling.Resource.FNOL_Bank :</label>
                        @Html.EditorFor(model => model.PolicyHolderBankName, new { htmlAttributes = new { @class = "form-control input-sm", @id = "deponent" } })
                        @Html.ValidationMessageFor(model => model.PolicyHolderBankName, "", new { @class = "text-danger input-sm" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row container">
            <header class="well">@InsuredTraveling.Resource.FNOL_InsuredInfo</header>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-lg-7">
                        <label> @InsuredTraveling.Resource.FNOL_Name:</label>
                        @Html.TextBoxFor(model => model.ClaimantName, new { @class = "form-control input-sm", @style = "display: none;", @readonly = true })
                        @Model.ClaimantName
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-7">
                        <label> @InsuredTraveling.Resource.FNOL_Address:</label>
                        @Html.TextBoxFor(model => model.ClaimantAdress, new { @class = "form-control input-sm", @style = "display: none;", @readonly = true })
                        @Model.ClaimantAdress
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-7">
                        <label>@InsuredTraveling.Resource.FNOL_Phone:</label>
                        @Html.TextBoxFor(model => model.ClaimantPhoneNumber, new { @class = "form-control input-sm", @style = "display: none;", @readonly = true })
                        @Model.ClaimantPhoneNumber
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-7">
                        <label>@InsuredTraveling.Resource.FNOL_SSN:</label>
                        @Html.TextBoxFor(model => model.ClaimantSsn, new { @class = "form-control input-sm", @style = "display: none;", @readonly = true })
                        @Model.ClaimantSsn
                    </div>
                </div>
                @if (Model.PolicyHolderId != Model.ClaimantId)
                {
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_RelationshipInsuredHolder:</label>
                            @Html.EditorFor(model => model.RelationClaimantPolicyHolder, new { htmlAttributes = new { @class = "form-control input-sm", @id = "relationship" } })
                            @Html.ValidationMessageFor(model => model.RelationClaimantPolicyHolder, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CheckBoxFor(model => model.ClaimantExistentBankAccount, new { @class = "col-md-1", @id = "ExistentBankAccountInsured", @readonly = true, @style = "margin-top:3%;" })
                    <div class="col-lg-8 col-md-8">
                        <label class="control-label">@InsuredTraveling.Resource.FNOL_UsePreviousBankAccount</label>
                    </div>
                </div>
                <div class="form-group">

                    @Html.CheckBoxFor(model => model.ClaimantBankAccount, new { @class = "col-md-1", @id = "ForeignBankAccountInsured", @readonly = true, @style = "margin-top:3%;" })
                    <div class="col-lg-4 col-md-4">
                        <label class="control-label">@InsuredTraveling.Resource.FNOL_ForeignBankAccount</label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.TextBoxFor(model => model.ClaimantBankAccountId, new { @class = "form-control input-sm", @id = "hiddenDropDownBankAccountInsured", @style = "display: none;" })
                        <select class="form-control" data-val="true" id="DropDownBankAccountInsured" name="ClaimantBankAccountId">
                            <option value="0">@InsuredTraveling.Resource.FNOL_ChooseBankAccount</option>
                            @foreach (var item in Model.ClaimantBankAccounts)
                            {
                                <option value="@item.ID" bank="@item.bank.Name">
                                    @item.Account_Number
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-6">
                        <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;" id="taccountspan"></span> @InsuredTraveling.Resource.FNOL_BankAccount:</label>
                        @Html.EditorFor(model => model.ClaimantBankAccountNumber, new { htmlAttributes = new { @class = "form-control input-sm", @maxLength = "15", @id = "insuredTransactionAccount" } })
                        @Html.ValidationMessageFor(model => model.ClaimantBankAccountNumber, "", new { @class = "text-danger input-sm" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-6">
                        <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;" id="deponentspan"></span> @InsuredTraveling.Resource.FNOL_Bank:</label>
                        @Html.EditorFor(model => model.ClaimantBankName, new { htmlAttributes = new { @class = "form-control input-sm", @id = "deponentInsured" } })
                        @Html.ValidationMessageFor(model => model.ClaimantBankName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row container">
            <header class="well">@InsuredTraveling.Resource.FNOL_TravelInformation</header>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-lg-7">
                        <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span> @InsuredTraveling.Resource.FNOL_TravelPlace:</label>
                        @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control input-sm", @id = "travelDestination" } })
                        @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-7">
                        <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span> @InsuredTraveling.Resource.FNOL_StartDate:</label>
                        @Html.EditorFor(model => model.DepartDateTime, new { htmlAttributes = new { @class = "form-control input-sm placeholder" } })
                        @Html.ValidationMessageFor(model => model.DepartDateTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-7">
                        <label>@InsuredTraveling.Resource.FNOL_StartTime:</label>
                        @Html.EditorFor(model => model.DepartTime, new { htmlAttributes = new { @class = "form-control input-sm", type = "time", @id = "travelTimeFrom" } })
                        @Html.ValidationMessageFor(model => model.DepartTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-lg-7">
                        <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span> @InsuredTraveling.Resource.FNOL_Vehicle:</label>
                        @Html.EditorFor(model => model.TransportMeans, new { htmlAttributes = new { @class = "form-control input-sm", @id = "transportationType" } })
                        @Html.ValidationMessageFor(model => model.TransportMeans, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-7">
                        <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>@InsuredTraveling.Resource.FNOL_EndDate:</label>
                        @Html.EditorFor(model => model.ArrivalDateTime, new { htmlAttributes = new { @class = "form-control input-sm placeholder" } })
                        @Html.ValidationMessageFor(model => model.ArrivalDateTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-7">
                        <label>@InsuredTraveling.Resource.FNOL_EndTime:</label>
                        @Html.EditorFor(model => model.ArriveTime, new { htmlAttributes = new { @class = "form-control input-sm", type = "time", @id = "travelTimeTo" } })
                        @Html.ValidationMessageFor(model => model.ArriveTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        @if (Model.IsHealthInsurance)
        {
            <div class="row container">
                <header class="well">@InsuredTraveling.Resource.FNOL_HealthInsuranceInfo</header>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span> @InsuredTraveling.Resource.FNOL_AccidentDate:</label>
                            @Html.EditorFor(model => model.AccidentDateTimeHealth, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.AccidentDateTimeHealth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>@InsuredTraveling.Resource.FNOL_AccidentTime:</label>
                            @Html.EditorFor(model => model.AccidentTimeHealth, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.AccidentTimeHealth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>@InsuredTraveling.Resource.FNOL_AccidentPlace:</label>
                            @Html.EditorFor(model => model.AccidentPlaceHealth, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.AccidentPlaceHealth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>@InsuredTraveling.Resource.FNOL_DateWhenDoctorVisit:</label>
                            @Html.EditorFor(model => model.DoctorVisitDateTime, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.DoctorVisitDateTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_DoctorInfo:</label>
                            @Html.TextAreaFor(model => model.DoctorInfo, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_DiseaseDescription:</label>
                            @Html.TextAreaFor(model => model.MedicalCaseDescription, new { @class = "form-control input-sm", @id = "illnessInfo" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            @Html.CheckBoxFor(model => model.PreviousMedicalHistory, new { @class = "col-md-1", @style = "margin-top:3%;" })
                            <label>@InsuredTraveling.Resource.FNOL_PreviousDiseaseHistory</label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_DocumentsAsProof:</label>
                            <br />
                            <table>
                                @if (Model.InsuranceInfoDoc != null)
                                {
                                    foreach (var doc in Model.InsuranceInfoDoc)
                                    {
                                        <tr>
                                            <td>
                                                @if (!String.IsNullOrEmpty(doc.FilePath))
                                                {
                                                    <a href="/FirstNoticeOfLoss/DocumentDownload/?path=@doc.FilePath">@doc.FileName</a>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    @noValue
                                }

                            </table>
                            <br />
                            <label>@InsuredTraveling.Resource.FNOL_DocumentsAsProof:</label>
                            <input type="file" name="documentsHealth" id="documentsHealth" multiple />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_ReportWroted:</label>
                            @Html.EditorFor(model => model.ResponsibleInstitution, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row container">
                <header class="well">@InsuredTraveling.Resource.FNOL_LuggageInsurance</header>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span> @InsuredTraveling.Resource.FNOL_AccidentDate:</label>
                            @Html.EditorFor(model => model.AccidentDateTimeLuggage, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.AccidentDateTimeLuggage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-7">
                            <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span> @InsuredTraveling.Resource.FNOL_AccidentPlace:</label>
                            @Html.EditorFor(model => model.AccidentPlaceLuggage, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.AccidentPlaceLuggage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span> @InsuredTraveling.Resource.FNOL_AccidentDescription:</label>
                            @Html.TextAreaFor(model => model.PlaceDescription, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.PlaceDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span> @InsuredTraveling.Resource.FNOL_AccidentDescriptionDetails:</label>
                            @Html.TextAreaFor(model => model.DetailDescription, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.DetailDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-7">
                            <label><span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span> @InsuredTraveling.Resource.FNOL_ReportPlace:</label><br />
                            @Html.TextAreaFor(model => model.ReportPlace, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.ReportPlace, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_FloatersDescription:</label>
                            @Html.TextAreaFor(model => model.Floaters, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_FloatersValue:</label>
                            @Html.EditorFor(model => model.FloatersValue, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_DocumentsAsProof:</label>
                            <br />
                            <table>
                                @if (Model.InsuranceInfoDoc != null)
                                {
                                    foreach (var doc in Model.InsuranceInfoDoc)
                                    {
                                        <tr>
                                            <td>
                                                @if (!String.IsNullOrEmpty(doc.FilePath))
                                                {
                                                    <a href="/FirstNoticeOfLoss/DocumentDownload/?path=@doc.FilePath">@doc.FileName</a>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    @noValue
                                }

                            </table>
                            <input type="file" name="documentsLuggage" id="documentsLuggage" multiple />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_AirportTimeArrival:</label>
                            @Html.EditorFor(model => model.AccidentTimeLuggage, new { htmlAttributes = new { @class = "form-control input-sm", type = "time" } })
                            @Html.ValidationMessageFor(model => model.AccidentTimeLuggage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-7">
                            <label>@InsuredTraveling.Resource.FNOL_LuggageCheckInTime:</label>
                            @Html.EditorFor(model => model.LugaggeCheckingTime, new { htmlAttributes = new { @class = "form-control input-sm", type = "time" } })
                            @Html.ValidationMessageFor(model => model.LugaggeCheckingTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="row container">
            <header class="well">@InsuredTraveling.Resource.FNOL_CostInformation</header>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-lg-7">
                        <label>@InsuredTraveling.Resource.FNOL_InvoicesAsProof:</label>
                        <br />
                        <table>
                            @if (Model.Invoices != null)
                            {
                                foreach (var invoice in Model.Invoices)
                                {
                                    <tr>
                                        <td>
                                            @if (!String.IsNullOrEmpty(invoice.FilePath))
                                            {
                                                <a href="/FirstNoticeOfLoss/DocumentDownload/?path=@invoice.FilePath">@invoice.FileName</a>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @noValue
                            }
                        </table>
                        <input type="file" name="invoices" id="invoices" multiple />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-7">
                        <label>@InsuredTraveling.Resource.FNOL_TotalCost:</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.TotalCost, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            <span class="input-group-addon">.00 денари</span>
                        </div>
                        @Html.ValidationMessageFor(model => model.TotalCost, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <input type="submit" value="@InsuredTraveling.Resource.FNOL_Edit" class="btn btn-default" />
            </div>
        </div>

    </div>
</form>
@if (ViewBag.insurance == "Health Insurance")
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#health").attr("checked", "true");
            $("#hiddenIsHealthInsurance").prop("checked", true);
            $("#healthInsurance").toggle();

        });
    </script>
}
else if (ViewBag.insurance == "Luggage Insurance")
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#luggage").attr("checked", "true");
            $("#hiddenIsHealthInsurance").prop("checked", false);
            $("#luggageInsurance").toggle();
        });
    </script>
}


@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/jqueryuicss")
<script type="text/javascript">
    var Banks;
    $(document).ready(function () {

        $.ajax({
            type: "GET",
            url: "/FirstNoticeOfLoss/GetBankPrefixes",
            success: function (result) {
                var rez = JSON.parse(result);
                console.log(rez);
                Banks = rez.banks;
            }
        });

        @*$("#ArrivalDateTime").datepicker("setDate", new Date(@Model.ArrivalDateTime.Date));
            $("#DepartDateTime").datepicker("setDate", new Date(@Model.DepartDateTime.Date));*@

        $('#deponent').prop('readonly', true);
        $('#deponentInsured').prop('readonly', true);
        $('#DropDownBankAccountPolicyHolder').hide();
        $('#DropDownBankAccountInsured').hide();
        $("#TransactionAccount, #insuredTransactionAccount, #TotalCost, #FloatersValue").keydown(function (e) {

            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                return;
            }
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
    });
    $("#ExistentBankAccount").change(function () {
        if (this.checked) {
            $('#DropDownBankAccountPolicyHolder').show();
            $('#TransactionAccount').prop('readonly', true);
            $('#deponent').prop('readonly', true);
            $("#TransactionAccount").attr("value", "");
            $("#deponent").attr("value", "");
            $("#DropDownBankAccountPolicyHolder option:selected").prop("selected", false)
        }
        else {
            $('#DropDownBankAccountPolicyHolder').hide();

            $('#TransactionAccount').prop('readonly', false);
            $("#TransactionAccount").attr("value", "");
            $("#deponent").attr("value", "");
            $("#DropDownBankAccountPolicyHolder option:selected").prop("selected", false);

            if ($('#ForeignBankAccount').is(':checked')) {
                $('#deponent').prop('readonly', false);
            }
        }
    });

    $("#ExistentBankAccountInsured").change(function () {
        if (this.checked) {
            $('#DropDownBankAccountInsured').show();
            $('#insuredTransactionAccount').prop('readonly', true);

            $('#DropDownBankAccountInsured').show();
            $('#insuredTransactionAccount').prop('readonly', true);
            $('#deponentInsured').prop('readonly', true);
            $("#insuredTransactionAccount").attr("value", "");
            $("#deponentInsured").attr("value", "");
            $("#DropDownBankAccountInsured option:selected").prop("selected", false)
        }
        else {

            $('#DropDownBankAccountInsured').hide();
            $('#insuredTransactionAccount').prop('readonly', false);
            $("#insuredTransactionAccount").attr("value", "");
            $("#deponentInsured").attr("value", "");
            $("#DropDownBankAccountInsured option:selected").prop("selected", false);
            if ($('#ForeignBankAccountInsured').is(':checked')) {
                $('#deponentInsured').prop('readonly', false);
            }
        }
    });
    $("#DepartDateTime").datepicker({
        dateFormat: "mm/dd/yy",
        dateonly: true,
        onSelect: function (selected) {
            var arrivalDate = $("#ArrivalDateTime").datepicker().val()
            $("#ArrivalDateTime").datepicker("option", "minDate", selected);
            $("#ArrivalDateTime").val(arrivalDate);

            var accidentDateLuggage = $("#AccidentDateTimeLuggage").val();
            $("#AccidentDateTimeLuggage").datepicker("option", "minDate", selected);
            $("#AccidentDateTimeLuggage").val(accidentDateLuggage);

            var accidentDateHealth = $("#AccidentDateTimeHealth").val();
            $("#AccidentDateTimeHealth").datepicker("option", "minDate", selected);
            $("#AccidentDateTimeHealth").val(accidentDateHealth);

            var doctorVisitDate = $("#DoctorVisitDateTime").val();
            $("#DoctorVisitDateTime").datepicker("option", "minDate", selected);
            $("#DoctorVisitDateTime").val(doctorVisitDate);
        },
    });

    $("#ArrivalDateTime").datepicker({
        dateFormat: "mm/dd/yy",
        dateonly: true,
        onSelect: function (selected) {
            var departDate = $("#DepartDateTime").datepicker().val();
            $("#DepartDateTime").datepicker("option", "maxDate", selected);
            $("#DepartDateTime").val(departDate);

            var accidentDateLuggage = $("#AccidentDateTimeLuggage").val();
            $("#AccidentDateTimeLuggage").datepicker("option", "maxDate", selected);
            $("#AccidentDateTimeLuggage").val(accidentDateLuggage);

            var accidentDateHealth = $("#AccidentDateTimeHealth").val();
            $("#AccidentDateTimeHealth").datepicker("option", "maxDate", selected);
            $("#AccidentDateTimeHealth").val(accidentDateHealth);

            var doctorVisitDate = $("#DoctorVisitDateTime").val();
            $("#DoctorVisitDateTime").datepicker("option", "maxDate", selected);
            $("#DoctorVisitDateTime").val(doctorVisitDate);
        },
    });

    $("#AccidentDateTimeHealth").datepicker({
        dateFormat: "mm/dd/yy",
        dateonly: true,
        onSelect: function (selected) {

        },
    });

    $("#AccidentDateTimeLuggage").datepicker({
        dateFormat: "mm/dd/yy",
        dateonly: true,
        onSelect: function (selected) {

        },
    });

    $("#DoctorVisitDateTime").datepicker({
        dateFormat: "mm/dd/yy",
        dateonly: true,
        onSelect: function (selected) {
        },
    });
    $("#ForeignBankAccount").change(function () {
        if (this.checked) {
            $("#DropDownBankAccountPolicyHolder option:selected").prop("selected", false);
            $("#TransactionAccount").attr("value", "");
            $("#deponent").attr("value", "");
            $('#TransactionAccount').attr('maxLength', 30);

            if ($('#ExistentBankAccount').is(':checked')) {
                $('#TransactionAccount').prop('readonly', true);
            }
            else {
                $('#deponent').prop('readonly', false);
            }
        }
        else {
            $("#DropDownBankAccountPolicyHolder option:selected").prop("selected", false);
            $("#TransactionAccount").attr("value", "");
            $("#deponent").attr("value", "");
            $('#TransactionAccount').attr('maxLength', 15);
            $('#deponent').prop('readonly', true);
        }
    });

    $("#ForeignBankAccountInsured").change(function () {
        if (this.checked) {
            $("#DropDownBankAccountInsured option:selected").prop("selected", false);
            $("#insuredTransactionAccount").attr("value", "");
            $("#deponentInsured").attr("value", "");
            $('#insuredTransactionAccount').attr('maxLength', 30);

            if ($('#ExistentBankAccountInsured').is(':checked')) {
                $('#insuredTransactionAccount').prop('readonly', true);
            }
            else {
                $('#deponentInsured').prop('readonly', false);
            }
        }
        else {
            $("#DropDownBankAccountInsured option:selected").prop("selected", false);
            $("#insuredTransactionAccount").attr("value", "");
            $("#deponentInsured").attr("value", "");
            $('#insuredTransactionAccount').attr('maxLength', 15);
            $('#deponentInsured').prop('readonly', true);
        }
    });

    $('#TransactionAccount').focusout(function () {
        if ($("#ForeignBankAccount").checked && $("#ExistentBankAccount").checked) {
            $('#deponent').prop('readonly', true);
        }
        else {
            var bankAccount = $('#TransactionAccount').val();
            var prefixTillNow = bankAccount.substring(0, 3);
            $.each(Banks, function (key, value) {
                if (value.Prefix == prefixTillNow) {
                    $('#deponent').attr('value', value.BankName);
                }
            });
        }
    });
    $('#insuredTransactionAccount').focusout(function () {
        if ($("#ForeignBankAccountInsured").checked && $("#ExistentBankAccountInsured").checked) {
            $('#deponentInsured').prop('readonly', true);
        }
        else {
            var bankAccount = $('#insuredTransactionAccount').val();
            var prefixTillNow = bankAccount.substring(0, 3);
            $.each(Banks, function (key, value) {
                if (value.Prefix == prefixTillNow) {
                    $('#deponentInsured').attr('value', value.BankName);
                }
            });
        }
    });

    $('#DropDownBankAccountPolicyHolder').on('change', function () {
        if ($('#DropDownBankAccountPolicyHolder option:selected').val() == 0) {
            $('#deponent').attr('value', "");
            $('#TransactionAccount').attr('value', "");
        }
        else {
            $('#deponent').attr('value', $('#DropDownBankAccountPolicyHolder option:selected').attr("bank"));
            $('#TransactionAccount').attr('value', $('#DropDownBankAccountPolicyHolder option:selected').text());
            var InsuredId = $('#DropDownBankAccountPolicyHolder option:selected').val();
            $('#hiddenDropDownBankAccountPolicyHolder').val(InsuredId);
        }
    });

    $('#DropDownBankAccountInsured').on('change', function () {
        if ($('#DropDownBankAccountInsured option:selected').val() == 0) {
            $('#deponentInsured').attr('value', "");
            $('#insuredTransactionAccount').attr('value', "");
        }
        else {
            var InsuredId = $('#DropDownBankAccountInsured option:selected').val();
            $('#hiddenDropDownBankAccountInsured').val(InsuredId);
            $('#deponentInsured').attr('value', $('#DropDownBankAccountInsured option:selected').attr("bank"));
            $('#insuredTransactionAccount').attr('value', $('#DropDownBankAccountInsured option:selected').text());
        }
    });
    //Disable other than English letters
    $(".input-sm, .text-box").keypress(function (event) {
        var ew = event.which;
        if (ew == 32)
            return true;
        if (48 <= ew && ew <= 57)
            return true;
        if (65 <= ew && ew <= 90)
            return true;
        if (97 <= ew && ew <= 122)
            return true;
        return false;
    });
</script>
