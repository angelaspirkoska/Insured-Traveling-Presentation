@model InsuredTraveling.Models.FirstNoticeOfLoss

@{
    ViewBag.Title = "First Notice of Loss";
}


<form style="margin-top:80px;" method="post" action="@Url.Action("Index")">
    <div class="form-horizontal">
        <div class="row container">
            @if (ViewBag.Message != null)
            {
                if (ViewBag.Message == "Something went wrong!")
                {
                    <div class="row" style="width:35%;">
                        <div class="alert alert-dismissible alert-danger" style="margin-top: 27%; margin-left:12px; width:211%">
                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                            <strong>Oh snap!</strong> <span>@ViewBag.Message</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="row" style="width:35%;">
                        <div class="alert alert-dismissible alert-success" style="margin-top: 27%;margin-left:12px; width:211%">
                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                            <strong>Great!</strong> <span>@ViewBag.Message</span>
                        </div>
                    </div>
                }
            }
        </div>

        <h3>Пријави штета</h3>
        <br />
        <br />
        <div><h5>Задолжителни полиња  <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"> </span>  </h5></div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row container">
            <div class="col-md-6 col-md-offset-6">
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span><label class="col-md-4 control-label">Број на полиса:</label>
                    <div class="col-lg-7">

                        @Html.DropDownListFor(model => model.policyNumber, (List<SelectListItem>)ViewBag.Policies, "Број на полиса", new { @class = "form-control", @id = "DropDownPolicyNumber" })

                        @Html.ValidationMessageFor(model => model.policyNumber, "", new { @class = "text-danger input-sm" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row container">
            <header class="well">Податоци за носител на полиса</header>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">Осигуреник:</label>
                    <div class="col-lg-8">
                        <input type="text" class="form-control input-sm" id="PolicyHolderName" readonly>
                    </div>
                </div>
                <input hidden type="text" value="@System.Web.HttpContext.Current.User.Identity.Name" name="username" />
                <div class="form-group">
                    <label class="col-md-4 control-label">Адреса:</label>
                    <div class="col-lg-8">
                        <input type="text" class="form-control input-sm" id="PolicyHolderAddress" readonly>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Телефон:</label>
                    <div class="col-lg-8">
                        <input type="text" class="form-control input-sm" id="PolicyHolderPhone" readonly>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">ЕМБГ:</label>
                    <div class="col-lg-8">
                        <input type="text" class="form-control input-sm" id="PolicyHolderSSN" readonly>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    
                    <div class="col-lg-8 col-md-8">
                        <label class="control-label">Искористи претходна трансакциска сметка:</label>
                    </div>
                    <input type="checkbox" value="" id="ExistentBankAccount" class="col-md-1" style="margin-top:3%;"/>
                </div>
                <div class="form-group">

                    <div class="col-lg-4 col-md-4">
                        <label class="control-label">Странска сметка</label>
                    </div>
                    <input type="checkbox" value="" id="ForeignBankAccount" class="col-md-1" style="margin-top:3%;" />
                </div>
                <div class="form-group" style="padding-left: 34%;">
                   
                    <div class="col-md-12">
                        <select class="form-control" data-val="true" id="DropDownBankAccountPolicyHolder" name="policyNumber">
                            <option value="0">Избери трансакциска сметка</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    
                    <label class="col-md-5 control-label">Трансакциона сметка:</label>
                    <div class="col-lg-6">
                        @Html.EditorFor(model => model.TransactionAccount, new { htmlAttributes = new { @class = "form-control input-sm" , @maxLength = "15" } })
                        @Html.ValidationMessageFor(model => model.TransactionAccount, "", new { @class = "text-danger input-sm" })
                    </div>
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red" id="taccountspan"></span>
                </div>


                <div class="form-group">
                    <label class="col-md-5 control-label">Депонент банка:</label>
                    <div class="col-lg-6">
                        @Html.EditorFor(model => model.deponent, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.deponent, "", new { @class = "text-danger input-sm" })
                    </div>
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red" id="deponentspan"></span>
                </div>
            </div>
        </div>


        <div class="row container">
            <header class="well">Корисник на осигурувањето</header>
            <div class="col-md-6">
                <div class="form-group">
                    <select class="form-control" data-val="true" id="DropDownInsureds" name="policyNumber">
                        <option value="0">Избери корисник</option>
                    </select>
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Оштетен:</label>
                    <div class="col-lg-7">
                        <input type="text" class="form-control input-sm" id="InsuredName" readonly>
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Адреса:</label>
                    <div class="col-lg-7">
                        <input type="text" class="form-control input-sm" id="InsuredAdress" readonly>
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Телефон:</label>
                    <div class="col-lg-7">
                        <input type="text" class="form-control input-sm" id="InsuredPhone" readonly>
                    </div>
                </div>
                <div class="form-group" id="HideWhenSameUserAndSelectedInsured">
                    <label class="col-md-4 control-label">Сродство со осигуреникот::</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.relationship, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.relationship, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">ЕМБГ:</label>
                    <div class="col-lg-7">
                        <input type="text" class="form-control input-sm" id="InsuredSSN" readonly>
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Трансакциона с-ка:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.insuredTransactionAccount, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.insuredTransactionAccount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Депонент банка:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.deponentInsured, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.deponentInsured, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>


        <div class="row container">
            <header class="well">Податоци за патувањето</header>
            <div class="col-md-6">
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Место на патување:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.travelDestination, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.travelDestination, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Превозно средство:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.transportationType, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.transportationType, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Датум на заминување:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.travelDateFrom, new { htmlAttributes = new { @class = "form-control input-sm placeholder", type = "date" } })
                        @Html.ValidationMessageFor(model => model.travelDateFrom, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Време на заминување:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.travelTimeFrom, new { htmlAttributes = new { @class = "form-control input-sm", type = "time" } })
                        @Html.ValidationMessageFor(model => model.travelTimeFrom, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Датум на враќање:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.travelDateTo, new { htmlAttributes = new { @class = "form-control input-sm placeholder", type = "date" } })
                        @Html.ValidationMessageFor(model => model.travelDateTo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Време на враќање:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.travelTimeTo, new { htmlAttributes = new { @class = "form-control input-sm", type = "time" } })
                        @Html.ValidationMessageFor(model => model.travelTimeTo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>


        <div class="row container">
            <header class="well">Одберете тип на осигурување: </header>
            <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
            <div class="col-md-4">
                <div class="form-group">
                    <input type="radio" name="insurance" value="Health Insurance" onchange="InsuranceType('HealthInsurance');" required id="health"> Здравствено осигурување
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <input type="radio" name="insurance" value="Luggage Insurance" onchange="InsuranceType('LuggageInsurance');" required id="luggage"> Осигурување на багаж
                </div>
            </div>
        </div>

        <div class="row container" hidden id="healthInsurance">
            <header class="well">Податоци за штетата - Здравствено осигурување</header>
            <div class="col-md-6">
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Датум на незгодата:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.lossDate, new { htmlAttributes = new { @class = "form-control input-sm", type = "date" } })
                        @Html.ValidationMessageFor(model => model.lossDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Време на незгодата:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.lossTime, new { htmlAttributes = new { @class = "form-control input-sm", type = "time" } })
                        @Html.ValidationMessageFor(model => model.lossTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Место на незгодата:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.placeLoss, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.placeLoss, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Прв контакт со докторот и негови податоци:</label>
                    <div class="col-lg-7">
                        @Html.TextAreaFor(model => model.DoctorInfo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.DoctorInfo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">Опис на болеста и дали претходно сте биле лекувани од истата:</label>
                    <div class="col-lg-7">
                        @Html.TextAreaFor(model => model.illnessInfo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.illnessInfo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Документи приложени како доказ:</label>
                    <div class="col-lg-7">
                        @Html.TextAreaFor(model => model.documentsHanded, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.documentsHanded, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Во случај на тешка повреда или смрт, кој орган составил записник и детален опис на настанот :</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.additionalInfo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.additionalInfo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <div class="row container" hidden id="luggageInsurance">
            <header class="well">Податоци за штетата - Осигурување на багаж</header>
            <div class="col-md-6">
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Датум на настанот:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.baggageLossDate, new { htmlAttributes = new { @class = "form-control input-sm", type = "date" } })
                        @Html.ValidationMessageFor(model => model.baggageLossDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Место и опис на настанот:</label>
                    <div class="col-lg-7">
                        @Html.TextAreaFor(model => model.placeBaggageLoss, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.placeBaggageLoss, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Детален опис на настанот:</label>
                    <div class="col-lg-7">
                        @Html.TextAreaFor(model => model.detailedDescription, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.detailedDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Место на пријавување:</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.placeReported, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.placeReported, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">Опис на украдените/оштетени предмети и нивната вредност:</label>
                    <div class="col-lg-7">
                        @Html.TextAreaFor(model => model.descriptionLostStolenThings, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.descriptionLostStolenThings, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Документи приложени како доказ :</label>
                    <div class="col-lg-7">
                        @Html.TextAreaFor(model => model.documentsHanded2, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.documentsHanded2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Време на пристигнување на аеродром :</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.airportArrivalTime, new { htmlAttributes = new { @class = "form-control input-sm", type = "time" } })
                        @Html.ValidationMessageFor(model => model.airportArrivalTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Време на предавање на багаж :</label>
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.baggageDropTime, new { htmlAttributes = new { @class = "form-control input-sm", type = "time" } })
                        @Html.ValidationMessageFor(model => model.baggageDropTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <div class="row container">
            <header class="well">Податоци за трошоци</header>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">Фактури како доказ:</label>
                    <div class="col-lg-7">
                        @Html.TextAreaFor(model => model.additionalDocumentsHanded, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.additionalDocumentsHanded, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span class="glyphicon glyphicon-star small" aria-hidden="true" style="color:red"></span>
                    <label class="col-md-4 control-label">Вкупна вредност на сите трошоци:</label>
                    <div class="col-lg-7">
                        <div class="input-group">
                            @Html.EditorFor(model => model.valueExpenses, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            <span class="input-group-addon">.00 денари</span>
                        </div>
                        @Html.ValidationMessageFor(model => model.valueExpenses, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Пријави" class="btn btn-default" />
            </div>
        </div>
    </div>

</form>

@if (ViewBag.insurance == "Health Insurance")
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#health").attr("checked", "true");
            $("#healthInsurance").toggle();
        });
    </script>
}
else if (ViewBag.insurance == "Luggage Insurance")
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#luggage").attr("checked", "true");
            $("#luggageInsurance").toggle();
        });
    </script>
}


<script type="text/javascript">
    var Banks;
    $(document).ready(function () {

        $('#deponent').prop('readonly', true);  
       

        $('#DropDownBankAccountPolicyHolder').hide();


        $("#TransactionAccount").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });


    });

    $("#ExistentBankAccount").change(function () {
        if (this.checked) {
            $('#DropDownBankAccountPolicyHolder').show();
            $('#TransactionAccount').prop('readonly', true);

            
        }
        else {
            $('#DropDownBankAccountPolicyHolder').hide();
            $('#TransactionAccount').prop('readonly', false);

        }
    });

    $("#ForeignBankAccount").change(function () {
        if (this.checked) {
           
            $('#TransactionAccount').attr('maxLength', 30);
            $('#deponent').prop('readonly', false);
        }
        else {
           
            $('#TransactionAccount').attr('maxLength', 15);
            $('#deponent').prop('readonly', true);
        }
    });
    
    $('#TransactionAccount').focusout(function () {

        if ($("#ForeignBankAccount").checked &&  $("#ExistentBankAccount").checked)
        {

        }
        else {
            var bankAccount = $('#TransactionAccount').val();

        var prefixTillNow = bankAccount.substring(0, 3);
        $.each(Banks, function (key, value) {
            if(value.Prefix == prefixTillNow){
                $('#deponent').attr('value',value.BankName);
            }
        });
        }

        
    });

    $('#DropDownBankAccountPolicyHolder').on('change', function ()
    {
        if ($('#DropDownBankAccountPolicyHolder option:selected').val() == 0)
        {
            $('#deponent').attr('value',"");
            $('#TransactionAccount').attr('value', "");
        }
        else {
        $('#deponent').attr('value', $('#DropDownBankAccountPolicyHolder option:selected').attr("bank"));
        $('#TransactionAccount').attr('value', $('#DropDownBankAccountPolicyHolder option:selected').text());
         }
    });


    $('#DropDownPolicyNumber').on('change', function () {
        ClearDropDownData();
        var PolicyId = $('#DropDownPolicyNumber').val()
        $.ajax({
            type: "GET",
            url: "/FirstNoticeOfLoss/GetInsureds?policyID=" + PolicyId,
            success: function (result) {

                var rez = JSON.parse(result);
                console.log(rez);
                Banks = rez.banks;

                $("#PolicyHolderName").attr("value", rez.policyholder.FirstName + " " + rez.policyholder.LastName);
                $("#PolicyHolderPhone").attr("value", rez.policyholder.PhoneNumber);
                $("#PolicyHolderSSN").attr("value", rez.policyholder.SSN);
                $("#PolicyHolderAddress").attr("value", rez.policyholder.Adress + " " + rez.policyholder.City);

                $.each(rez.policyholder.BankAccounts, function (key, value)
                {
                    $('#DropDownBankAccountPolicyHolder').append($("<option></option>").attr({ value: value.Id, bank: value.BankName }).text(value.AccountNumber));
                });

                $.each(rez.data, function (i, val) {
                    $('#DropDownInsureds').append(
                    $("<option></option>")
                      .attr("value", val.Id)
                      .text(val.FirstName + " " + val.LastName));
                });
                FillInsuredData();


            }
        });



    });

    function InsuranceType(type) {
        if (type == "LuggageInsurance") {
            $("#luggageInsurance").toggle();
            $("#healthInsurance").hide();
        } else if (type == "HealthInsurance") {
            $("#healthInsurance").toggle();
            $("#luggageInsurance").hide();
        }
    }

    function ClearDropDownData() {

        $("#PolicyHolderName").attr("value", "");
        $("#PolicyHolderPhone").attr("value", "");
        $("#PolicyHolderSSN").attr("value", "");
        $("#PolicyHolderAddress").attr("value", "");

        $.each($('#DropDownBankAccountPolicyHolder option'), function (i, val) {
            if (val.value == 0) {
            }
            else {
                $(val).remove();
            }
        });
    }

    function FillInsuredData() {


        $('#DropDownInsureds').on('change', function () {
            var InsuredId = $('#DropDownInsureds option:selected').val()

            $.ajax({
                type: "GET",
                url: "/FirstNoticeOfLoss/GetInsuredData?SelectedInsuredId=" + InsuredId,
                dataType: "json",
                success: function (result) {
                    console.log(result);
                    $("#InsuredName").attr("value", result.FirstName + " " + result.LastName);
                    $("#InsuredAdress").attr("value", result.Adress);
                    $("#InsuredPhone").attr("value", result.PhoneNumber);
                    $("#InsuredSSN").attr("value", result.SSN);
                    $("#relationship").attr("isSameUserWithSelectedInsured", result.IsSameUserAndSelectedInsured);
                }
            });

            $("#relationship").attr("isSameUserWithSelectedInsured", "true");
            $("#HideWhenSameUserAndSelectedInsured").toggle();


        });
    }


</script>

