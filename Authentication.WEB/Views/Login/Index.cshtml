@using InsuredTraveling.Helpers
@model InsuredTraveling.Models.LoginUser

@{
    ViewBag.Title = InsuredTraveling.Resource.Login;
   
}

<div class="container-fluid col-md-offset-4 col-md-4 col-sm-3">
    @using (Html.BeginForm())    {
        <h2 class="panel-heading " style="" >@InsuredTraveling.Resource.Login_Title</h2>

    if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
    {
        <div class="alert alert-danger" role="alert">
            <a class="close" data-dismiss="alert">x</a>
            @foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
            {
                if(modelError.ErrorMessage == "recaptchaError")
                {
                    <p>@InsuredTraveling.Resource.Msg_InvalidRecaptcha</p>
                }

                if (modelError.ErrorMessage == "usernameOrPasswordError")
                {
                    <p>@InsuredTraveling.Resource.Msg_IncorrectUserPass</p>
                }

                if (modelError.ErrorMessage == "usernameOrPasswordEmpty")
                {
                    <p>@InsuredTraveling.Resource.Msg_EmptyUsernameOrPassword</p>
                }
                if (modelError.ErrorMessage == "notAuthorize")
                {
                    <p>@InsuredTraveling.Resource.Msg_UserIsNotAuthorize</p>
                }

            }
        </div>
    }
   
    <div>
        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <div class="input-group-addon"><i class="glyphicon glyphicon-user"></i></div>
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control col-md-10" } })
                @*@Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })*@
            </div>
        </div>
    </div>

    <div>
        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <div class="input-group-addon"><i class="fa fa-key" aria-hidden="true"></i></div>
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control col-md-10" } })
                @*@Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })*@
            </div>
        </div>
    </div>

    @*<div style="padding: 20px 0px;">
        @Html.ReCaptcha()
    </div>*@
        <div>
            <input class="btn btn-success" value="@InsuredTraveling.Resource.Login" type="submit" style="width: 100%;" >
        </div>
        <div class="form-inline custom-spacing">
            <div>
                <a href="/ForgetPassword/EnterUsernameOrMail">@InsuredTraveling.Resource.Login_ForgotPassword</a>
                @*<a href="/SignUp" class="pull-right">@InsuredTraveling.Resource.SignUp</a>*@
            </div>
        </div>


    }
 </div>
