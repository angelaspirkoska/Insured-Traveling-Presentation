@model InsuredTraveling.Models.Policy

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Креирај полиса:</h2>

<form id="policy_form">

    <div class="form-horizontal">

        <hr />
        <div class="row container">
            <header class="well">Информации за полисата</header>
            <div class="form-inline row">

                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.CountryID, (List<SelectListItem>)ViewBag.Countries, "Земја на патување", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.Retaining_RiskID, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.Retaining_RiskID, (List<SelectListItem>)ViewBag.Franchise, "Франшиза", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Retaining_RiskID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.Policy_TypeID, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.Policy_TypeID, (List<SelectListItem>)ViewBag.TypeOfPolicy, "Вид на полиса", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Policy_TypeID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-inline row">
            <div class="form-group col-sm-12">
                @Html.LabelFor(model => model.Travel_NumberID, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox-container">
                    <label class="radio-inline ">
                        <input type="radio" name="Travel_NumberID", value="1"/>
                        @*@Html.RadioButtonFor(model => model.Travel_NumberID, "true", new { @value = "1", @text = "Едно патување" })*@
                        <label for="radio1">Едно патување</label>
                    </label>
                    <label class="radio-inline">
                        <input type="radio" name="Travel_NumberID" , value="2" />
                        @*@Html.RadioButtonFor(model => model.Travel_NumberID, "true", new { @value = "2", @text = "Повеќе патувања" })*@
                        <label for="radio1">Повеќе патувања</label>
                    </label>
                </div>
            </div>
        </div>
        <div class="form-inline row">
            <div class="form-group col-sm-3">
                @Html.LabelFor(model => model.Start_Date, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Start_Date, new { htmlAttributes = new { @class = "form-control input-sm placeholder", type = "date" } })
                    @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-sm-3">
                @Html.LabelFor(model => model.End_Date, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.End_Date, new { htmlAttributes = new { @class = "form-control input-sm placeholder", type = "date" } })
                    @Html.ValidationMessageFor(model => model.End_Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-sm-3">
                @Html.LabelFor(model => model.Valid_Days, htmlAttributes: new { @class = "control-label" })
                <div>
                    <div class="input-group">
                        @Html.EditorFor(model => model.Valid_Days, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        <span class="input-group-addon">денови</span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Valid_Days, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <br />
        <br />


        <div class="row container">
            <header class="well">Лични податоци за осигуреникот</header>


            <div class="form-inline row">
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-inline row">
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.SSN, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.PassportNumber_ID, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.PassportNumber_ID, new { htmlAttributes = new { @class = "form-control", } })
                        @Html.ValidationMessageFor(model => model.PassportNumber_ID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <br />
        <br />

        <div class="row container">
            <header class="well">Податоци за полисата</header>
            <div class="form-inline row">
                <div class="form-group col-sm-12">
                    @Html.LabelFor(model => model.Travel_Insurance_TypeID, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox-container">
                        <label class="radio-inline ">
                            <input type="radio" name="Travel_Insurance_TypeID" , value="1" id = "single_type"/>
                            @*@Html.RadioButtonFor(model => model.Travel_Insurance_TypeID, "true", new { @value = "1", id = "single_type" })*@
                            <label for="radio1">Поединечно</label>
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="Travel_Insurance_TypeID" , value="2" id = "family_type" />
                            @*@Html.RadioButtonFor(model => model.Travel_Insurance_TypeID, "true", new { @value = "2", id = "family_type" })*@
                            <label for="radio1">Фамилијарно</label>
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="Travel_Insurance_TypeID" , value="3" id="group_type" />
                            @*@Html.RadioButtonFor(model => model.Travel_Insurance_TypeID, "true", new { @value = "3", id = "group_type" })*@
                            <label for="radio1">Групно</label>
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-horizontal" id="family" hidden>
                @for (int i = 0; i < 6; i++)
                {
                    <div class="form-inline row">
                        <div class="form-group col-sm-3">
                            <div><label style="width:40%">Име:</label></div>
                            @Html.EditorFor(model => model.insureds[i].Name, new { htmlAttributes = new { @class = "form-control input-sm", } })
                        </div>
                        <div class="form-group col-sm-3">
                            <div><label>Презиме:</label></div>
                            @Html.EditorFor(model => model.insureds[i].Lastname, new { htmlAttributes = new { @class = "form-control input-sm", } })
                        </div>
                        <div class="form-group col-sm-3">
                            <div><label>Матичен број:</label></div>
                            @Html.EditorFor(model => model.insureds[i].SSN, new { htmlAttributes = new { @class = "form-control input-sm", } })
                        </div>
                    </div>
                }

            </div>

            <div class="form-horizontal row" id="group" hidden>
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.Group_Members, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Group_Members, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.Group_Members, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-sm-3">
                    @Html.LabelFor(model => model.Group_Total_Premium, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Group_Total_Premium, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.Group_Total_Premium, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-horizontal row">
                @for (int i = 0; i < 2; i++)
                {
                    <div class="form-group col-sm-3">
                        <div><label>Доплаток @(i + 1)</label></div>
                        <div>
                            @Html.DropDownListFor(model => model.additional_charges[i].ID, (List<SelectListItem>)ViewBag.additional_charges, "Доплаток", new { @class = "form-control" })
                        </div>
                    </div>
                }
            </div>

            <br />
            <br />

            <div class="form-inline row">
                <div class="form-group col-sm-3 col-md-3">
                    <div>
                        <input type="button" value="Пресметај премија" class="btn btn-default" onclick="CalculateTotalPremium()" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Total_Premium, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7">
                        <div class="input-group">
                            @Html.EditorFor(model => model.Total_Premium, new { htmlAttributes = new { @class = "form-control", style = "width: 45%", id="totalPremium"} })
                            @Html.ValidationMessageFor(model => model.Total_Premium, "", new { @class = "col-md-6 text-danger" })
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <br />
        <br />

        <div class="form-inline row">
            <div class="form-group col-sm-3 col-md-3">
                <div>
                    <input type="button" value="Купи полиса" class="btn btn-lg btn-default" onclick="@("window.location.href='" + @Url.Action("Index", "Payment") + "'");"  />
                </div>
            </div>
            <div class="form-group col-sm-3 col-md-3">
                <div>
                    <input type="button" value="Додади во понуди" class="btn btn-lg btn-default" />
                </div>
            </div>
            <div class="form-group col-sm-3">
                <div>
                    <input type="button" onclick="@("window.location.href='" + @Url.Action("PrintPolicy", "Policy") + "'");" class="btn btn-lg btn-default" value="Печати Полиса" />
                </div>
            </div>
        </div>
    </div>
</form>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/additional-methods.js"></script>
<!-- macedonian language-->
<script src="~/Scripts/messages_is.js"></script>

<script>

    $(document).ready(function () {
        $("#family").hide();
        $("#group").hide();

        $("#single_type").click(function () {
            $("#family").hide();
            $("#group").hide();
        });
        $("#family_type").click(function () {
            $("#family").show()
            $("#group").hide();
        });
        $("#group_type").click(function () {
            $("#family").hide();
            $("#group").show();
        });
    });

    function CalculateTotalPremium() {
        $.ajax({
            type: "POST",
            url: "@System.Configuration.ConfigurationManager.AppSettings["webpage_url"]/api/premium/calculate",
            data: $("#policy_form").serialize(),
            success: function (result) {
                console.log(result.PremiumAmount);
                $("#totalPremium").val(result.PremiumAmount);

            }
        });
    }
    

    //disable default submit
    $('#dugme').on('submit', function (e) {
        // validation code here
        if (!valid) {
            e.preventDefault();
        }

    });
    $("#policyForm").validate({
        rules: {
            EMBG: {
                required: true,
                number: true,
                minlength: 13,
                maxlength: 13


            },
            osigurenik1MaticenBroj: {
                required: true,
                number: true,
                minlength: 13,
                maxlength: 13

            }

        }
    });


    jQuery.validator.setDefaults({
        debug: true,
        success: "valid",

    });
    var form = $("#policyForm");
    form.validate({

        lang: 'is'

    });

    $("#dugme").click(function () {
        if (form.valid() == true) {

            var data = $("#policyForm").serialize();

            $.ajax({
                type: "POST",
                url: "CreatePolicy",
                data: data,
                success: function () {

                }
            });

        }
    });

    $("#startDate").focusout(function () {
        var Edat = $("#startDate").val();
        var Sdat = new Date($("#startDate").val());

        var god = (Sdat.getFullYear() + 1);
        var mesec = $("#startDate").val().substring(5, 7);
        var den = $("#startDate").val().substring(8, 10);
        var intDen = parseInt(den) + 2;
        $("#endDate").attr('min', Edat);
        $("#endDate").attr('max', god + "-" + mesec + "-" + intDen);


    });

    $("#vaziDenovi").focusin(function () {
        var Sdat = new Date($("#startDate").val());
        var Edat = new Date($("#endDate").val());
        if ($('#povekePatuvanja').is(':checked')) {
            $("#vaziDenovi").attr('min', 15);

        }
        else {
            $("#vaziDenovi").attr('min', 2);
        }

    });

</script>