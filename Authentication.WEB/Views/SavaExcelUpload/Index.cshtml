@model InsuredTraveling.Models.SavaExcelModel
@using System.Web.Optimization;
@using System.Configuration;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutLimitless.cshtml";
    var grid = new WebGrid(Model.TableRows);
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    var dateFormatString = System.Configuration.ConfigurationManager.AppSettings["DateFormat"].ToString().ToLower();
}

<div class="row">
    <div class="row">
        <br /><br />
        <div class="col-md-5">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div>

                    @Html.TextBoxFor(x => x.MyExcelFile, new { type = "file" })

                </div>
                <button class="btn btn-success" type="submit">@Resource.Sava_ExcelUpload_Doc</button>
                <br /><br />
            }

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger" role="alert">
                    <a class="close" data-dismiss="alert">x</a>
                    <p>@Html.ValidationMessageFor(x => x.MyExcelFile)</p>
                </div>
            }

            @if (ViewBag.ErrorMessage != "")
            {
                <div class="alert alert-danger" role="alert">
                    <a class="close" data-dismiss="alert">x</a>
                    <p>@ViewBag.ErrorMessage</p>
                </div>
            }
        </div>
        <div class="col-md-7">

            <a class="btn btn-info" href="/SavaExcelUpload/SavaDocumentDownload">@Resource.Sava_ExcelTemplateDownload</a>
            
        </div>
    </div>

<div class="row" id="dataRow" style="visibility:hidden">  
    @grid.GetHtml(    
        tableStyle: "webgrid-table table table-bordered table-hover table-striped no-footer dataTable",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns:
            grid.Columns(
             grid.Column(Resource.Sava_ExcelPolicy_Number, format: @<text>  <span class="display-mode"> @item.policy_number </span> <label id="UserID" class="edit-mode">@item.policy_number</label> </text>, style: "col1Width"),
             @*grid.Column("id_seller", Resource.Sava_ExcelSeller_id, format: @<text>  <span class="display-mode">   <label id="lblName">@item.id_seller</label> </span> <input type="text" id="Name" value="@item.id_seller" class="edit-mode" /></text>, style: "col2Width"),*@
             grid.Column("SSN_insured", Resource.Sava_ExcelSSN_Insured, format: @<text> <span class="display-mode"> <label id="lblSSN_insured">@item.SSN_insured</label> </span>  <input type="text" id="SSN_insured" value="@item.SSN_insured" class="edit-mode" /> </text>, style: "col2Width"),
             grid.Column("SSN_policyHolder", Resource.Sava_ExcelSSN_Holder, format: @<text> <span class="display-mode"> <label id="lblSSN_policyHolder">@item.SSN_policyHolder</label> </span>  <input type="text" id="SSN_policyHolder" value="@item.SSN_policyHolder" class="edit-mode" /> </text>, style: "col2Width"),
             grid.Column("date_created", Resource.Sava_ExcelPolicyDate, format: @<text> <span class="display-mode"> <label id="lbldate_created">@item.date_created.Date.ToString("dd'/'MM'/'yyyy")</label> </span>  <input type="text" id="date_created" value="@item.date_created.Date.ToString("dd'/'MM'/'yyyy")" class="edit-mode" /> </text>, style: "col2Width"),
             grid.Column("expiry_date", Resource.Sava_ExcelExpiry_Date, format: @<text> <span class="display-mode"> <label id="lblexpiry_date">@item.expiry_date.Date.ToString("dd'/'MM'/'yyyy")</label> </span>  <input type="text" id="expiry_date" value="@item.expiry_date.Date.ToString("dd'/'MM'/'yyyy")" class="edit-mode" /> </text>, style: "col2Width"),
             grid.Column("premium", Resource.Sava_ExcelPremium, format: @<text> <span class="display-mode"> <label id="lblpremium">@item.premium</label> </span>  <input type="text" id="premium" value="@item.premium" class="edit-mode" /> </text>, style: "col2Width"),
             @*grid.Column("email_seller", Resource.Sava_ExcelEmailHolder, format: @<text> <span class="display-mode"> <label id="lblemail_seller">@item.email_seller</label> </span>  <input type="text" id="email_seller" value="@item.email_seller" class="edit-mode" /> </text>, style: "col2Width"),*@
             grid.Column("discount_points", Resource.Sava_ExcelDiscountPoints, format: @<text> <span class="display-mode"> <label id="lbldiscount_points">@item.discount_points</label> </span>  <input type="text" id="discount_points" value="@item.discount_points" class="edit-mode" /> </text>, style: "col2Width"),


                grid.Column("", format: @<text>
                    <button onclick="togleMenu()" class="edit-user display-mode  btn btn-primary">@Resource.FNOL_Edit</button>
                    <button class="save-user edit-mode btn btn-success btn-sm">@Resource.News_Save</button>
                    <button  class="cancel-user edit-mode btn btn-danger btn-sm">@Resource.Search_Cancel</button>
                </text>, style: "col3Width", canSort: false)
           ))
    
        
</div>

    <div class="row" id="buttonRow" style="visibility:hidden">
        <button type="button" class="btn btn-success " id="SaveTable">
            @Resource.Sava_Excel_SavePolicy
        </button>
    </div>
    </div>

<style>
    tr > td > input {
            width: 130px;
    }

</style>

@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/jqueryuicss")

<script type="text/javascript">

    $(document).ready(function () {
        var dateFormatString = "@System.Configuration.ConfigurationManager.AppSettings["DateFormat"].ToString().ToLower()";
        $("#expiry_date").datepicker({
            dateFormat: dateFormatString,
            changeMonth: true,
            changeYear: true,
            yearRange: '-100y:c+nn',

        });

        $("#date_created").datepicker({
            dateFormat: dateFormatString,
            changeMonth: true,
            changeYear: true,
            yearRange: '-100y:c+nn',

        });
    });

    var repost = parseInt( @ViewBag.IsRepost);
    if (repost != 1) {
        $("#dataRow").css("visibility", "hidden")
        $("#SaveTable").css("visibility", "hidden")

    } else {
        $("#dataRow").css("visibility", "visible")
        $("#SaveTable").css("visibility", "visible")
    }

    function togleMenu (){
        $("body").addClass("sidebar-xs");
    };

    $(".save-user").click(function () {
        $("body").removeClass("sidebar-xs");
    });

    $(".cancel-user").click(function () {
        $("body").removeClass("sidebar-xs");
    });

    $(function () {
        $('.edit-mode').hide();
        $('.edit-user, .cancel-user').on('click', function () {
            var tr = $(this).parents('tr:first');

            tr.find('.edit-mode, .display-mode').toggle();
            var dateFormatString = "@System.Configuration.ConfigurationManager.AppSettings["DateFormat"].ToString().ToLower()";

        });

        $('.save-user').on('click', function () {

            var tr = $(this).parents('tr:first');
            var Name = tr.find("#Name").val();
            var SSN_insured = tr.find("#SSN_insured").val();
            var SSN_policyHolder = tr.find("#SSN_policyHolder").val();
            var date_created = tr.find("#date_created").val();
            var expiry_date = tr.find("#expiry_date").val();
            var premium = tr.find("#premium").val();
            var email_seller = tr.find("#email_seller").val();
            var discount_points = tr.find("#discount_points").val();

            tr.find("#lblName").text(Name);
            tr.find("#lblSSN_insured").text(SSN_insured);
            tr.find("#lblSSN_policyHolder").text(SSN_policyHolder);
            tr.find("#lbldate_created").text(date_created);
            tr.find("#lblexpiry_date").text(expiry_date);
            tr.find("#lblpremium").text(premium);
            tr.find("#lblemail_seller").text(email_seller);
            tr.find("#lbldiscount_points").text(discount_points);
            tr.find('.edit-mode, .display-mode').toggle();
        });

        $('#SaveTable').on('click', function () {
            var valid = true;

            function checkSSN(SSN_insured, SSN_policyHolder) {
                var polNum = {
                    "SSN": SSN_insured,
                    "SSN_Holder": SSN_policyHolder
                }

                $.ajax({
                    url: '../SavaExcelUpload/CheckSSN',
                    data: JSON.stringify(polNum),
                    type: 'POST',
                    async: false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        var returnedData = JSON.parse(data);
                        if (returnedData.Error2 == 1) {
                            red4(SSN_policyHolder);
                            alert("Korisnik so takva polisa ne postoi");
                        }
                        if (returnedData.SSN != "true") {
                            red2(SSN_insured);
                        }
                        if (returnedData.SSN_Holder != "true") {
                            red3(SSN_policyHolder);
                        }

                        return returnedData;
                    }
                });
            }

            function checkPolicyID(policyNumber) {
                var polNum = {
                    "policy_number": policyNumber,
                }


                $.ajax({
                    url: '../SavaExcelUpload/CheckPolicyNumberExist',
                    data: JSON.stringify(polNum),
                    type: 'POST',
                    async: false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        var returnedData = JSON.parse(data);
                        if (returnedData.Exists == "true") {
                            red(policyNumber);
                        }else
                        return returnedData;
                    }
                });
            }

            function red(policyNumber) {
                valid = false;
                $("tbody tr").each(function (index) {
                    var tr = $(this);
                    var policy_number2 = tr.find("#UserID").html();
                    if ( policyNumber == policy_number2) {
                        tr.find("#UserID").parent().css("border-color", "red");
                        tr.find("#UserID").parent().children().css("border-color", "red");

                    }
                }
            )
            };
            function red2(SSN) {
                valid = false;
                $("tbody tr").each(function (index) {
                    var tr = $(this);
                    var policy_number2 = tr.find("#SSN_insured").val();
                    if (SSN == policy_number2) {

                        tr.find("#SSN_insured").parent().css("border-color", "red");
                        tr.find("#SSN_insured").parent().children().css("border-color", "red");

                    }
                }
            )
            };
            function red3(SSN_Holder) {
                valid = false;
                $("tbody tr").each(function (index) {
                    var tr = $(this);
                    var policy_number2 = tr.find("#SSN_policyHolder").val();
                    if (SSN_Holder == policy_number2) {
                        tr.find("#SSN_policyHolder").parent().css("border-color", "red");
                        tr.find("#SSN_policyHolder").parent().children().css("border-color", "red");

                    }
                }
            )
            };
            function red4(SSN_Holder) {
                valid = false;
                $("tbody tr").each(function (index) {
                    var tr = $(this);
                    var policy_number2 = tr.find("#SSN_policyHolder").val();
                    if (SSN_Holder == policy_number2) {
                        tr.find("#SSN_policyHolder").parent().css("border-color", "blue");
                        tr.find("#SSN_policyHolder").parent().children().css("border-color", "blue");

                    }
                }
            )
            };

            var list = [];
            $("tbody tr").each(function (index) {
                var tr = $(this);
                var policy_number = tr.find("#UserID").html();

                var x = checkPolicyID(policy_number);
                var date_created = "@System.Configuration.ConfigurationManager.AppSettings["DateFormat"].ToString().ToLower()";
                var expiry_date = "@System.Configuration.ConfigurationManager.AppSettings["DateFormat"].ToString().ToLower()";
                var Name = tr.find("#Name").val();
                var SSN_insured = tr.find("#SSN_insured").val();
                var SSN_policyHolder = tr.find("#SSN_policyHolder").val();
                checkSSN(SSN_insured, SSN_policyHolder);
                 date_created = tr.find("#date_created").val();
                 expiry_date = tr.find("#expiry_date").val();
                
                var premium = tr.find("#premium").val();
                var email_seller = tr.find("#email_seller").val();
                var discount_points = tr.find("#discount_points").val();
                var myObj = {
                    "policy_number": policy_number,
                    //"id_seller": Name,
                    "SSN_insured": SSN_insured,

                    "SSN_policyHolder": SSN_policyHolder,
                    "date_created": date_created,
                    "expiry_date": expiry_date,
                    "premium": premium,
                    //"email_seller": email_seller,
                    "discount_points": discount_points
                };

                list.push(myObj);
                //alert(JSON.stringify(myObj));
            });
            if (valid) {
                alert("polisata e validna");
                $.ajax({
                    url: '../SavaExcelUpload/SavePolicy',
                    data: JSON.stringify(list),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        alert("Uspesno zacuvana polisa");
                    }
                });
            } else {
                alert("Policy not valid");
            }
        });
    });

</script>  