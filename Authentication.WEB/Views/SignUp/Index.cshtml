@using InsuredTraveling.Helpers
@using System.Web.Optimization;
@using System.Configuration;
@model InsuredTraveling.Models.User
@{
    ViewBag.Title = "Sign up";
    Layout = "~/Views/Shared/_Layout2.cshtml";
    var dateTime = ConfigurationManager.AppSettings["DateFormat"];
    var dateTimeFormat = dateTime != null && (dateTime.Contains("yy") && !dateTime.Contains("yyyy")) ? dateTime.Replace("yy", "yyyy").ToLower() : dateTime.ToLower();
}

<form id="signup_form" method="post" action="@Url.Action("Index")" data-otf-ajax="true">
    <div class="row">
        <div class="col-md-6">
            <h2 class="form-login-heading heading-padding">@InsuredTraveling.Resource.SignUp</h2>
        </div>
        <div class="col-lg-offset-2 col-md-offset-2 col-lg-4 col-md-4 col-sm-4">
            <div class="alert alert-dismissible alert-info alert-position">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                <strong><span>@InsuredTraveling.Resource.Policy_UseNumberLatinLetters</span></strong>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @if (ViewBag.Message != null)
            {
                if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                {
                    <div class="alert alert-danger" role="alert">
                        <a class="close" data-dismiss="alert">x</a>
                        @foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
                        {
                            if (modelError.ErrorMessage ==  "recaptchaError")
                            {
                                <p>@InsuredTraveling.Resource.Msg_InvalidRecaptcha</p>
                            }
                        }
                    </div>
                }
                if (ViewBag.Message == "Registration failed")
                {
                    <div class="alert alert-dismissible alert-danger">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <span>@InsuredTraveling.Resource.SignUP_FailMessage</span>
                    </div>
                }
                else
                {
                    <div class="alert alert-dismissible alert-success">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <span>@InsuredTraveling.Resource.SignUp_SuccessMessage</span>
                    </div>

                    <script type="text/javascript">
                            $(document).ready(function () {
                                setTimeout(function () {
                                    window.location.replace("@System.Configuration.ConfigurationManager.AppSettings["webpage_url"]/SignUp/MobilePhoneVerification?username=" + $("#username").val());
                                }, 5000);

                                SendSMSCode();
                                //ActivateAccount();
                            });
                    </script>
                }
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <ul class="tab">
                <li><a href="javascript:void(0)" class="tablinks" onclick="openTab(event, 'Eden')" id="defaultOpen"> @InsuredTraveling.Resource.SignUp_Step1 </a></li>
                <li><a href="javascript:void(0)" class="tablinks" onclick="openTab(event, 'Dva')"> @InsuredTraveling.Resource.SignUp_Step2 </a></li>
            </ul>
        </div>
        <div class="col-md-12">
            <div id="Eden" class="tabcontent">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-6 col-sm-12 col-xs-12 col-lg-6">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>@InsuredTraveling.Resource.RequiredField
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-user"></i>
                                </div>
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control mandatoryField", onblur = "FindUsername()", id = "username", title= "Latin letters only" } })

                                <span style="color: red" id="UsernameMsg"></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="fa fa-key"></i>
                                </div>
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control mandatoryField" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="fa fa-key"></i>
                                </div>
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-user"></i>
                                </div>
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", title = "Latin letters only" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-user"></i>
                                </div>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", title = "Latin letters only" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-calendar"></i>
                                </div>
                                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control mandatoryField", @placeholder = dateTimeFormat } })
                            </div>
                            @Html.ValidationMessageFor(model => model.DateOfBirth,"", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-map-marker"></i>
                                </div>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", title = "Latin letters only" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.Municipality, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-home"></i>
                                </div>
                                @Html.EditorFor(model => model.Municipality, new { htmlAttributes = new { @class = "form-control", title = "Latin letters only" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Municipality, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-map-marker"></i>
                                </div>
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", title = "Latin letters only" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-user"></i>
                                </div>
                                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", title = "Numbers only" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 col-sm-2 hidden-xs text-right pull-right">
                            <a href="javascript:void(0)" class="btn btn-default tablinks" onclick="openTab(event, 'Dva')" style="font-size:15px;">
                                <span>@InsuredTraveling.Resource.SignUp_Continue </span>
                                <span class="glyphicon glyphicon-menu-right"></span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--Step 2-->
    <div class="row">
        <div class="col-md-12">
            <div id="Dva" class="tabcontent">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-6 col-sm-12 col-xs-12 col-lg-6">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>@InsuredTraveling.Resource.RequiredField
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-envelope"></i>
                                </div>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", title = "Latin letters only" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <select id="countriesCodes" style="width: 46px;">
                                        
                                    </select>
                                </div>
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", title = "Numbers only" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.MobilePhoneNumber, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                        <select id="countriesCodesMobile" style="width: 46px;">                                            
                                        </select>
                                </div>
                                @Html.EditorFor(model => model.MobilePhoneNumber, new { htmlAttributes = new { @class = "form-control", title = "Numbers only", id = "mobilenumber" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.MobilePhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-user"></i>
                                </div>
                                @Html.DropDownListFor(model => model.Gender, (List<SelectListItem>)ViewBag.Gender, Resource.User_SelectGender, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.EMBG, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-user"></i>
                                </div>
                                @Html.EditorFor(model => model.EMBG, new { htmlAttributes = new { @class = "form-control mandatoryField insuredData", title = "Numbers only" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.EMBG, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-sm-12 col-xs-12 col-lg-4">
                            <span class="glyphicon glyphicon-asterisk small" aria-hidden="true" style="color:#E41B17;"></span>
                            @Html.LabelFor(model => model.PassportNumber, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="glyphicon glyphicon-user"></i>
                                </div>
                                @Html.EditorFor(model => model.PassportNumber, new { htmlAttributes = new { @class = "form-control", title = "Latin letters and numbers only" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PassportNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-4">
                            <div class="form-group">
                                @Html.ReCaptcha()
                            </div>
                          
                            <div class="form-group">
                               
                 
                                    <div class="" style="margin-left:-20px">
                                        <input type="submit" value="@InsuredTraveling.Resource.SignUp" onclick="myFunction()" class="btn btn-success signup-btn-style" />
                                    </div>
                               

                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 col-sm-2 hidden-xs pull-right text-right">
                            <a href="javascript:void(0)" class="btn btn-default tablinks" onclick="openTab(event, 'Eden')" style="font-size:15px; text-align:right">
                                <span> @InsuredTraveling.Resource.SignUp_Back </span>
                                <span class="hidden-xs glyphicon glyphicon-menu-left"></span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/additional-methods.js"></script>
<!-- macedonian language-->
<script src="~/Scripts/messages_is.js"></script>
@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/jqueryuicss")
<script type="text/javascript">
    $(document).ready(function () {
        var countriesCodes;
        var dateFormatString = "@System.Configuration.ConfigurationManager.AppSettings["DateFormat"].ToString().ToLower()";

        //Setting the class active-tab, so the user will know which tab is clicked
        $("#addNewPolicy").removeClass("active-tab");
        $("#newsTab").removeClass("active-tab");
        $("#searchTab").removeClass("active-tab");
        $("#fnolTab").removeClass("active-tab");
        $("#adminTab").removeClass("active-tab");
        $("#createTab").removeClass("active-tab");
        $("#signupTab").addClass("active-tab");

        $('.form-control').tooltip({
            placement: "bottom"
        });

        $.ajax({
            type: "GET",
            url: "@System.Configuration.ConfigurationManager.AppSettings["webpage_url"]/countriesCodes.json",
            dataType: "json"
        }).done(function (result) {
            countriesCodes = result.countriesCodes;

            $.each(result.countriesCodes, function (index, value) {
                $('#countriesCodes').append($('<option>', {
                    value: value.dial_code,
                    text: value.code + "  " + value.name
                }));
            });

            $.each(result.countriesCodes, function (index, value) {
                $('#countriesCodesMobile').append($('<option>', {
                    value: value.dial_code,
                    text: value.code + "  " + value.name
                }));
            });

            $("#countriesCodes option[value='+389']").prop("selected", true);
            $("#countriesCodesMobile option[value='+389']").prop("selected", true);
            $("#PhoneNumber").val("+389");
            $("#mobilenumber").val("+389");
        });

        $('#countriesCodes').change(function () {
            $("#PhoneNumber").val($('#countriesCodes').val());
        });

        $('#countriesCodesMobile').change(function () {
            $("#mobilenumber").val($('#countriesCodesMobile').val());
        });

        $("#DateOfBirth").datepicker({
            dateFormat: dateFormatString,
            changeMonth: true,
            changeYear: true,
            yearRange: '-100y:c+nn',
            maxDate: 'd'
        });
    });

    $("#Email").removeClass("text-box");

    function FindUsername() {
        $.ajax({
            type: "POST",
            url: "@System.Configuration.ConfigurationManager.AppSettings["webpage_apiurl"]/api/account/FindUser",
            data: jQuery.param({ username: $("#username").val() })
        })
        .done(function (result) {
            $("#UsernameMsg").text(" ");
        })
        .fail(function () {
            $("#UsernameMsg").text("@InsuredTraveling.Resource.SignUp_SameUserName");
        });
    };

    function ActivateAccount() {
        $.ajax({
            type: "POST",
            url: "@System.Configuration.ConfigurationManager.AppSettings["webpage_apiurl"]/api/account/ActivateAccount",
            data: { username: $("#username").val() }
        })
            .done(function (result) {
            })
            .error(function () {
            });
    }
    function SendSMSCode() {
        $.ajax({
            type: "POST",
            url: "@System.Configuration.ConfigurationManager.AppSettings["webpage_apiurl"]/api/account/SendSMSCode",
            data: jQuery.param({ username: $("#username").val() }),
        })
        .done(function (result) {
            alert("@InsuredTraveling.Resource.OK_SMSCode");
        })
        .error(function () {

        });
    }

    $(".input-sm, .text-box").keypress(function (event) {
        var ew = event.which;
        console.log(ew);

        if (ew == 32) {
            return true;
        }
        if (46 <= ew && ew <= 57) {
            return true;
        }
        if (64 <= ew && ew <= 90) {
            return true;
        }
        if (97 <= ew && ew <= 122) {
            return true;
        }

        return false;
    });

    $("#EMBG, #mobilenumber, #PhoneNumber").keydown(function (e) {
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            return;
        }
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });
    function openTab(evt, tab) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(tab).style.display = "block";
        evt.currentTarget.className += " active";
    }
    document.getElementById("defaultOpen").click();
</script>
<style>
    ul.tab {
        list-style-type: none;
        margin: 0;
        padding: 0;
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

        ul.tab li {
            float: left;
        }

            ul.tab li a:hover {
                background-color: #ddd;
            }

    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }
    /* Style the links inside the list items */
    ul.tab li a {
        display: inline-block;
        color: black;
        text-align: center;
        padding: 14px 16px;
        text-decoration: none;
        transition: 0.3s;
        font-size: 17px;
    }
        /* Create an active/current tablink class */
        ul.tab li a:focus, .active {
            background-color: #ccc;
        }
</style>